import matplotlib.pyplot
from matplotlib.ticker import FormatStrFormatter
from matplotlib.ticker import MaxNLocator
import matplotlib.axes
import pylab

files =  ["cuda5-35.out","openmp5-35.out","serial5-35.out"]
tags = {"cuda5-35.out":"Cuda","openmp5-35.out":"OpenMP","serial5-35.out":"Serial"}
numberOfStructures = range(5,40,5)

file_times = {}
# Parse files
for filename in files:
	handler = open(filename,"r")
	times = []	
	for line in handler:
		if line[:4]== "With":
			times.append(float(line.split()[4]));
	file_times[tags[filename]] = times


# Draw the plot
colors = {"Cuda": 'r',"OpenMP": 'b' , "Serial":'g'}
axis = matplotlib.pyplot.subplot(111)
pylab.gcf().set_dpi(50)
#figure.
pylab.title ("QCP Calculator Performance")
legend_lines = []
legend_keys = []
for key in tags:
	line, = axis.plot(numberOfStructures, file_times[tags[key]],colors[tags[key]])
	matplotlib.pyplot.setp(line, linewidth = 2)
	legend_lines.append(line)
	legend_keys.append(tags[key])
	line, = axis.plot(numberOfStructures, file_times[tags[key]],colors[tags[key]]+'o')

# Axis labels
matplotlib.pyplot.xlabel('Number Of Structures')
matplotlib.pyplot.ylabel('Calculation Time')
matplotlib.pyplot.gca().yaxis.set_major_formatter(FormatStrFormatter('%d s'))
matplotlib.pyplot.gca().xaxis.set_major_formatter(FormatStrFormatter('%d k'))
matplotlib.pyplot.gca().yaxis.set_minor_locator(matplotlib.ticker.MultipleLocator(5))

# Grid
matplotlib.pyplot.grid(True)

# Legend 
matplotlib.pyplot.legend(legend_lines, legend_keys, loc = 2)
# Show it
matplotlib.pyplot.show()
